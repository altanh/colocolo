#lang rosette
(require colocolo colocolo/lang/ast colocolo/engine/interpretation colocolo/lang/bounds colocolo/engine/sat/solver colocolo/lib/skolemize-solve colocolo/engine/symmetry)
(define universe$0 (universe (list "goal" "n0" "n1" "n2" "n3" "n4" "n5" "n6" "n7" "n8" "n9" "n10" "n11" "n12" "n13" "n14" "n15" "n16" "n17" "n18" "n19" "n20")))
(define v$34 (declare-relation 1 "Y13"))
(define v$55 (declare-relation 1 "NSX3"))
(define v$77 (declare-relation 1 "NPY10"))
(define v$56 (declare-relation 1 "NSX4"))
(define v$59 (declare-relation 1 "NSX7"))
(define v$3 (declare-relation 1 "Y"))
(define v$21 (declare-relation 1 "Y0"))
(define v$39 (declare-relation 1 "NPX2"))
(define v$45 (declare-relation 1 "NPX8"))
(define v$73 (declare-relation 1 "NPY6"))
(define v$9 (declare-relation 1 "X4"))
(define v$22 (declare-relation 1 "Y1"))
(define v$53 (declare-relation 1 "NSX1"))
(define v$75 (declare-relation 1 "NPY8"))
(define v$38 (declare-relation 1 "NPX1"))
(define v$40 (declare-relation 1 "NPX3"))
(define v$48 (declare-relation 1 "NPX11"))
(define v$72 (declare-relation 1 "NPY5"))
(define v$10 (declare-relation 1 "X5"))
(define v$31 (declare-relation 1 "Y10"))
(define v$60 (declare-relation 1 "NSX8"))
(define v$32 (declare-relation 1 "Y11"))
(define v$52 (declare-relation 1 "NSX0"))
(define v$84 (declare-relation 1 "NSY2"))
(define v$91 (declare-relation 1 "NSY9"))
(define v$18 (declare-relation 1 "X13"))
(define v$11 (declare-relation 1 "X6"))
(define v$50 (declare-relation 1 "NPX13"))
(define v$74 (declare-relation 1 "NPY7"))
(define v$42 (declare-relation 1 "NPX5"))
(define v$62 (declare-relation 1 "NSX10"))
(define v$14 (declare-relation 1 "X9"))
(define v$82 (declare-relation 1 "NSY0"))
(define v$29 (declare-relation 1 "Y8"))
(define v$57 (declare-relation 1 "NSX5"))
(define v$28 (declare-relation 1 "Y7"))
(define v$94 (declare-relation 1 "NSY12"))
(define v$68 (declare-relation 1 "NPY1"))
(define v$33 (declare-relation 1 "Y12"))
(define v$13 (declare-relation 1 "X8"))
(define v$92 (declare-relation 1 "NSY10"))
(define v$54 (declare-relation 1 "NSX2"))
(define v$65 (declare-relation 1 "NSX13"))
(define v$46 (declare-relation 1 "NPX9"))
(define v$20 (declare-relation 1 "X15"))
(define v$66 (declare-relation 1 "NSX14"))
(define v$85 (declare-relation 1 "NSY3"))
(define v$47 (declare-relation 1 "NPX10"))
(define v$61 (declare-relation 1 "NSX9"))
(define v$17 (declare-relation 1 "X12"))
(define v$67 (declare-relation 1 "NPY0"))
(define v$71 (declare-relation 1 "NPY4"))
(define v$35 (declare-relation 1 "Y14"))
(define v$58 (declare-relation 1 "NSX6"))
(define v$2 (declare-relation 1 "X"))
(define v$86 (declare-relation 1 "NSY4"))
(define v$96 (declare-relation 1 "NSY14"))
(define v$51 (declare-relation 1 "NPX14"))
(define v$7 (declare-relation 1 "X2"))
(define v$25 (declare-relation 1 "Y4"))
(define v$83 (declare-relation 1 "NSY1"))
(define v$87 (declare-relation 1 "NSY5"))
(define v$15 (declare-relation 1 "X10"))
(define r$4 (declare-relation 3 "sum"))
(define v$26 (declare-relation 1 "Y5"))
(define v$6 (declare-relation 1 "X1"))
(define v$64 (declare-relation 1 "NSX12"))
(define r$0 (declare-relation 2 "succ"))
(define v$63 (declare-relation 1 "NSX11"))
(define v$70 (declare-relation 1 "NPY3"))
(define v$27 (declare-relation 1 "Y6"))
(define v$36 (declare-relation 1 "Y15"))
(define v$76 (declare-relation 1 "NPY9"))
(define v$37 (declare-relation 1 "NPX0"))
(define v$24 (declare-relation 1 "Y3"))
(define v$41 (declare-relation 1 "NPX4"))
(define v$89 (declare-relation 1 "NSY7"))
(define v$16 (declare-relation 1 "X11"))
(define v$30 (declare-relation 1 "Y9"))
(define v$43 (declare-relation 1 "NPX6"))
(define v$49 (declare-relation 1 "NPX12"))
(define v$88 (declare-relation 1 "NSY6"))
(define v$80 (declare-relation 1 "NPY13"))
(define v$44 (declare-relation 1 "NPX7"))
(define v$78 (declare-relation 1 "NPY11"))
(define v$19 (declare-relation 1 "X14"))
(define v$90 (declare-relation 1 "NSY8"))
(define v$12 (declare-relation 1 "X7"))
(define v$79 (declare-relation 1 "NPY12"))
(define v$23 (declare-relation 1 "Y2"))
(define v$5 (declare-relation 1 "X0"))
(define v$69 (declare-relation 1 "NPY2"))
(define v$81 (declare-relation 1 "NPY14"))
(define v$95 (declare-relation 1 "NSY13"))
(define v$8 (declare-relation 1 "X3"))
(define v$1 (declare-relation 1 "vsucc"))
(define v$93 (declare-relation 1 "NSY11"))
(define b-ex$649 (join v$35 r$0))
(define b-ex$424 (join r$0 v$56))
(define b-ex$657 (join v$81 r$0))
(define b-ex$514 (join r$0 v$90))
(define b-ex$109 (join r$0 r$0))
(define decl$27 (cons v$16 univ #|one|#))
(define b-ex$610 (join r$0 v$94))
(define decl$37 (cons v$26 univ #|one|#))
(define decl$86 (cons v$75 univ #|one|#))
(define b-ex$441 (join v$72 r$0))
(define cmp-f$672 (= v$18 v$34))
(define b-ex$334 (join r$0 v$22))
(define b-ex$469 (join v$43 r$0))
(define decl$98 (cons v$87 univ #|one|#))
(define decl$103 (cons v$92 univ #|one|#))
(define b-ex$597 (join v$17 r$0))
(define decl$56 (cons v$45 univ #|one|#))
(define b-ex$314 (join r$0 v$5))
(define decl$95 (cons v$84 univ #|one|#))
(define decl$38 (cons v$27 univ #|one|#))
(define b-ex$589 (join v$48 r$0))
(define decl$47 (cons v$36 univ #|one|#))
(define decl$69 (cons v$58 univ #|one|#))
(define decl$64 (cons v$53 univ #|one|#))
(define cmp-f$675 (= v$19 v$35))
(define decl$53 (cons v$42 univ #|one|#))
(define decl$71 (cons v$60 univ #|one|#))
(define b-ex$633 (join v$80 r$0))
(define b-ex$490 (join r$0 v$89))
(define cmp-f$678 (= v$20 v$36))
(define decl$79 (cons v$68 univ #|one|#))
(define b-ex$601 (join v$33 r$0))
(define decl$8 (cons v$2 univ #|one|#))
(define decl$43 (cons v$32 univ #|one|#))
(define decl$36 (cons v$25 univ #|one|#))
(define decl$9 (cons v$3 univ #|one|#))
(define b-ex$538 (join r$0 v$91))
(define b-ex$513 (join v$75 r$0))
(define decl$102 (cons v$91 univ #|one|#))
(define decl$77 (cons v$66 univ #|one|#))
(define b-ex$325 (join v$37 r$0))
(define b-ex$465 (join v$73 r$0))
(define b-ex$586 (join r$0 v$93))
(define b-ex$409 (join v$25 r$0))
(define b-ex$393 (join v$70 r$0))
(define b-ex$646 (join r$0 v$35))
(define decl$16 (cons v$5 univ #|one|#))
(define b-ex$448 (join r$0 v$57))
(define decl$91 (cons v$80 univ #|one|#))
(define decl$100 (cons v$89 univ #|one|#))
(define b-ex$526 (join r$0 v$30))
(define decl$22 (cons v$11 univ #|one|#))
(define b-ex$370 (join r$0 v$84))
(define decl$51 (cons v$40 univ #|one|#))
(define decl$87 (cons v$76 univ #|one|#))
(define b-ex$541 (join v$46 r$0))
(define b-ex$626 (join r$0 v$18))
(define b-ex$313 (join v$21 r$0))
(define decl$32 (cons v$21 univ #|one|#))
(define b-ex$357 (join v$7 r$0))
(define b-ex$361 (join v$23 r$0))
(define decl$80 (cons v$69 univ #|one|#))
(define b-ex$333 (join v$6 r$0))
(define b-ex$634 (join r$0 v$95))
(define b-ex$525 (join v$14 r$0))
(define b-ex$0 (-> univ univ))
(define decl$46 (cons v$35 univ #|one|#))
(define b-ex$658 (join r$0 v$96))
(define b-ex$345 (join v$68 r$0))
(define decl$28 (cons v$17 univ #|one|#))
(define b-ex$433 (join v$26 r$0))
(define decl$35 (cons v$24 univ #|one|#))
(define decl$99 (cons v$88 univ #|one|#))
(define b-ex$573 (join v$16 r$0))
(define decl$29 (cons v$18 univ #|one|#))
(define decl$34 (cons v$23 univ #|one|#))
(define b-ex$478 (join r$0 v$28))
(define b-ex$358 (join r$0 v$23))
(define b-ex$477 (join v$12 r$0))
(define decl$62 (cons v$51 univ #|one|#))
(define b-ex$309 (join v$5 r$0))
(define b-ex$592 (join r$0 v$63))
(define decl$50 (cons v$39 univ #|one|#))
(define b-ex$578 (join r$0 v$16))
(define decl$33 (cons v$22 univ #|one|#))
(define decl$60 (cons v$49 univ #|one|#))
(define b-ex$381 (join v$8 r$0))
(define b-ex$493 (join v$44 r$0))
(define decl$63 (cons v$52 univ #|one|#))
(define b-ex$338 (join r$0 v$6))
(define b-ex$349 (join v$38 r$0))
(define b-ex$472 (join r$0 v$58))
(define decl$67 (cons v$56 univ #|one|#))
(define b-ex$457 (join v$27 r$0))
(define decl$58 (cons v$47 univ #|one|#))
(define decl$20 (cons v$9 univ #|one|#))
(define b-ex$421 (join v$41 r$0))
(define b-ex$362 (join r$0 v$7))
(define b-ex$369 (join v$69 r$0))
(define b-ex$417 (join v$71 r$0))
(define b-ex$489 (join v$74 r$0))
(define decl$21 (cons v$10 univ #|one|#))
(define decl$61 (cons v$50 univ #|one|#))
(define b-ex$517 (join v$45 r$0))
(define decl$2 (cons v$1 univ #|one|#))
(define b-ex$561 (join v$77 r$0))
(define decl$59 (cons v$48 univ #|one|#))
(define b-ex$376 (join r$0 v$54))
(define b-ex$346 (join r$0 v$83))
(define decl$105 (cons v$94 univ #|one|#))
(define b-ex$394 (join r$0 v$85))
(define b-ex$453 (join v$11 r$0))
(define b-ex$502 (join r$0 v$29))
(define decl$85 (cons v$74 univ #|one|#))
(define b-ex$418 (join r$0 v$86))
(define b-ex$397 (join v$40 r$0))
(define b-ex$430 (join r$0 v$26))
(define b-ex$520 (join r$0 v$60))
(define b-ex$574 (join r$0 v$32))
(define decl$70 (cons v$59 univ #|one|#))
(define decl$101 (cons v$90 univ #|one|#))
(define decl$24 (cons v$13 univ #|one|#))
(define decl$74 (cons v$63 univ #|one|#))
(define b-ex$602 (join r$0 v$17))
(define decl$66 (cons v$55 univ #|one|#))
(define b-ex$562 (join r$0 v$92))
(define b-ex$373 (join v$39 r$0))
(define decl$19 (cons v$8 univ #|one|#))
(define decl$65 (cons v$54 univ #|one|#))
(define decl$82 (cons v$71 univ #|one|#))
(define b-ex$640 (join r$0 v$65))
(define decl$49 (cons v$38 univ #|one|#))
(define b-ex$496 (join r$0 v$59))
(define decl$81 (cons v$70 univ #|one|#))
(define b-ex$410 (join r$0 v$9))
(define b-ex$544 (join r$0 v$61))
(define decl$41 (cons v$30 univ #|one|#))
(define b-ex$585 (join v$78 r$0))
(define b-ex$609 (join v$79 r$0))
(define decl$90 (cons v$79 univ #|one|#))
(define decl$73 (cons v$62 univ #|one|#))
(define decl$107 (cons v$96 univ #|one|#))
(define b-ex$664 (join r$0 v$66))
(define decl$55 (cons v$44 univ #|one|#))
(define decl$42 (cons v$31 univ #|one|#))
(define decl$104 (cons v$93 univ #|one|#))
(define b-ex$637 (join v$50 r$0))
(define decl$26 (cons v$15 univ #|one|#))
(define b-ex$321 (join v$67 r$0))
(define decl$75 (cons v$64 univ #|one|#))
(define decl$92 (cons v$81 univ #|one|#))
(define decl$18 (cons v$7 univ #|one|#))
(define b-ex$310 (join r$0 v$21))
(define b-ex$501 (join v$13 r$0))
(define b-ex$661 (join v$51 r$0))
(define decl$40 (cons v$29 univ #|one|#))
(define decl$97 (cons v$86 univ #|one|#))
(define b-ex$565 (join v$47 r$0))
(define decl$93 (cons v$82 univ #|one|#))
(define decl$72 (cons v$61 univ #|one|#))
(define b-ex$554 (join r$0 v$15))
(define b-ex$530 (join r$0 v$14))
(define b-ex$553 (join v$31 r$0))
(define decl$83 (cons v$72 univ #|one|#))
(define b-ex$385 (join v$24 r$0))
(define decl$106 (cons v$95 univ #|one|#))
(define b-ex$386 (join r$0 v$8))
(define decl$30 (cons v$19 univ #|one|#))
(define b-ex$442 (join r$0 v$87))
(define b-ex$482 (join r$0 v$12))
(define b-ex$400 (join r$0 v$55))
(define b-ex$621 (join v$18 r$0))
(define b-ex$622 (join r$0 v$34))
(define b-ex$322 (join r$0 v$82))
(define b-ex$529 (join v$30 r$0))
(define decl$76 (cons v$65 univ #|one|#))
(define decl$94 (cons v$83 univ #|one|#))
(define decl$52 (cons v$41 univ #|one|#))
(define b-ex$11 (join v$2 r$4))
(define b-ex$650 (join r$0 v$19))
(define decl$84 (cons v$73 univ #|one|#))
(define b-ex$429 (join v$10 r$0))
(define decl$31 (cons v$20 univ #|one|#))
(define b-ex$537 (join v$76 r$0))
(define decl$57 (cons v$46 univ #|one|#))
(define decl$89 (cons v$78 univ #|one|#))
(define b-ex$445 (join v$42 r$0))
(define cmp-f$669 (= v$17 v$33))
(define decl$39 (cons v$28 univ #|one|#))
(define b-ex$454 (join r$0 v$27))
(define b-ex$505 (join v$29 r$0))
(define b-ex$598 (join r$0 v$33))
(define decl$68 (cons v$57 univ #|one|#))
(define b-ex$352 (join r$0 v$53))
(define b-ex$434 (join r$0 v$10))
(define decl$78 (cons v$67 univ #|one|#))
(define b-ex$382 (join r$0 v$24))
(define decl$54 (cons v$43 univ #|one|#))
(define b-ex$568 (join r$0 v$62))
(define b-ex$625 (join v$34 r$0))
(define decl$88 (cons v$77 univ #|one|#))
(define b-ex$549 (join v$15 r$0))
(define decl$23 (cons v$12 univ #|one|#))
(define b-ex$337 (join v$22 r$0))
(define b-ex$616 (join r$0 v$64))
(define decl$48 (cons v$37 univ #|one|#))
(define b-ex$3 (join v$1 r$0))
(define b-ex$405 (join v$9 r$0))
(define decl$25 (cons v$14 univ #|one|#))
(define b-ex$458 (join r$0 v$11))
(define b-ex$506 (join r$0 v$13))
(define b-ex$481 (join v$28 r$0))
(define decl$96 (cons v$85 univ #|one|#))
(define decl$44 (cons v$33 univ #|one|#))
(define b-ex$645 (join v$19 r$0))
(define b-ex$577 (join v$32 r$0))
(define b-ex$613 (join v$49 r$0))
(define decl$45 (cons v$34 univ #|one|#))
(define b-ex$550 (join r$0 v$31))
(define b-ex$406 (join r$0 v$25))
(define b-ex$466 (join r$0 v$88))
(define b-ex$328 (join r$0 v$52))
(define decl$17 (cons v$6 univ #|one|#))
(define b-ex$590 (join b-ex$589 r$4))
(define b-ex$527 (join b-ex$526 r$4))
(define b-ex$483 (join b-ex$482 r$4))
(define b-ex$377 (join b-ex$376 r$4))
(define b-ex$401 (join b-ex$400 r$4))
(define b-ex$539 (join b-ex$538 r$4))
(define !-f$673 (! cmp-f$672))
(define b-ex$638 (join b-ex$637 r$4))
(define b-ex$659 (join b-ex$658 r$4))
(define b-ex$459 (join b-ex$458 r$4))
(define b-ex$542 (join b-ex$541 r$4))
(define decls$108 (list decl$16 decl$17 decl$18 decl$19 decl$20 decl$21 decl$22 decl$23 decl$24 decl$25 decl$26 decl$27 decl$28 decl$29 decl$30 decl$31 decl$32 decl$33 decl$34 decl$35 decl$36 decl$37 decl$38 decl$39 decl$40 decl$41 decl$42 decl$43 decl$44 decl$45 decl$46 decl$47 decl$48 decl$49 decl$50 decl$51 decl$52 decl$53 decl$54 decl$55 decl$56 decl$57 decl$58 decl$59 decl$60 decl$61 decl$62 decl$63 decl$64 decl$65 decl$66 decl$67 decl$68 decl$69 decl$70 decl$71 decl$72 decl$73 decl$74 decl$75 decl$76 decl$77 decl$78 decl$79 decl$80 decl$81 decl$82 decl$83 decl$84 decl$85 decl$86 decl$87 decl$88 decl$89 decl$90 decl$91 decl$92 decl$93 decl$94 decl$95 decl$96 decl$97 decl$98 decl$99 decl$100 decl$101 decl$102 decl$103 decl$104 decl$105 decl$106 decl$107))
(define b-ex$587 (join b-ex$586 r$4))
(define mul-f$4 (multiplicity-formula 'one b-ex$3))
(define b-ex$435 (join b-ex$434 r$4))
(define b-ex$110 (join b-ex$109 r$0))
(define !-f$679 (! cmp-f$678))
(define cmp-f$1 (in r$0 b-ex$0))
(define b-ex$315 (join b-ex$314 r$4))
(define b-ex$335 (join b-ex$334 r$4))
(define b-ex$311 (join b-ex$310 r$4))
(define b-ex$419 (join b-ex$418 r$4))
(define !-f$676 (! cmp-f$675))
(define b-ex$339 (join b-ex$338 r$4))
(define b-ex$350 (join b-ex$349 r$4))
(define b-ex$641 (join b-ex$640 r$4))
(define !-f$670 (! cmp-f$669))
(define b-ex$579 (join b-ex$578 r$4))
(define b-ex$446 (join b-ex$445 r$4))
(define b-ex$494 (join b-ex$493 r$4))
(define b-ex$395 (join b-ex$394 r$4))
(define b-ex$503 (join b-ex$502 r$4))
(define b-ex$455 (join b-ex$454 r$4))
(define b-ex$443 (join b-ex$442 r$4))
(define b-ex$611 (join b-ex$610 r$4))
(define b-ex$374 (join b-ex$373 r$4))
(define b-ex$515 (join b-ex$514 r$4))
(define b-ex$359 (join b-ex$358 r$4))
(define b-ex$323 (join b-ex$322 r$4))
(define b-ex$555 (join b-ex$554 r$4))
(define b-ex$563 (join b-ex$562 r$4))
(define decls$10 (list decl$8 decl$9))
(define b-ex$497 (join b-ex$496 r$4))
(define b-ex$431 (join b-ex$430 r$4))
(define b-ex$545 (join b-ex$544 r$4))
(define b-ex$635 (join b-ex$634 r$4))
(define b-ex$467 (join b-ex$466 r$4))
(define b-ex$665 (join b-ex$664 r$4))
(define b-ex$449 (join b-ex$448 r$4))
(define b-ex$473 (join b-ex$472 r$4))
(define b-ex$470 (join b-ex$469 r$4))
(define b-ex$521 (join b-ex$520 r$4))
(define b-ex$371 (join b-ex$370 r$4))
(define b-ex$363 (join b-ex$362 r$4))
(define b-ex$12 (join v$3 b-ex$11))
(define b-ex$603 (join b-ex$602 r$4))
(define b-ex$407 (join b-ex$406 r$4))
(define b-ex$507 (join b-ex$506 r$4))
(define b-ex$353 (join b-ex$352 r$4))
(define b-ex$566 (join b-ex$565 r$4))
(define b-ex$479 (join b-ex$478 r$4))
(define b-ex$398 (join b-ex$397 r$4))
(define b-ex$593 (join b-ex$592 r$4))
(define b-ex$425 (join b-ex$424 r$4))
(define b-ex$518 (join b-ex$517 r$4))
(define b-ex$627 (join b-ex$626 r$4))
(define b-ex$531 (join b-ex$530 r$4))
(define b-ex$551 (join b-ex$550 r$4))
(define b-ex$647 (join b-ex$646 r$4))
(define b-ex$326 (join b-ex$325 r$4))
(define b-ex$411 (join b-ex$410 r$4))
(define b-ex$614 (join b-ex$613 r$4))
(define b-ex$347 (join b-ex$346 r$4))
(define b-ex$623 (join b-ex$622 r$4))
(define b-ex$569 (join b-ex$568 r$4))
(define b-ex$599 (join b-ex$598 r$4))
(define b-ex$383 (join b-ex$382 r$4))
(define b-ex$387 (join b-ex$386 r$4))
(define b-ex$662 (join b-ex$661 r$4))
(define b-ex$617 (join b-ex$616 r$4))
(define b-ex$491 (join b-ex$490 r$4))
(define b-ex$329 (join b-ex$328 r$4))
(define b-ex$422 (join b-ex$421 r$4))
(define b-ex$575 (join b-ex$574 r$4))
(define b-ex$651 (join b-ex$650 r$4))
(define b-ex$396 (join b-ex$393 b-ex$395))
(define b-ex$436 (join b-ex$433 b-ex$435))
(define b-ex$652 (join b-ex$649 b-ex$651))
(define b-ex$444 (join b-ex$441 b-ex$443))
(define b-ex$552 (join b-ex$549 b-ex$551))
(define b-ex$480 (join b-ex$477 b-ex$479))
(define b-ex$576 (join b-ex$573 b-ex$575))
(define b-ex$604 (join b-ex$601 b-ex$603))
(define b-ex$336 (join b-ex$333 b-ex$335))
(define b-ex$420 (join b-ex$417 b-ex$419))
(define b-ex$432 (join b-ex$429 b-ex$431))
(define b-f$671 (|| false !-f$670))
(define b-ex$564 (join b-ex$561 b-ex$563))
(define b-ex$408 (join b-ex$405 b-ex$407))
(define b-ex$648 (join b-ex$645 b-ex$647))
(define b-ex$384 (join b-ex$381 b-ex$383))
(define mul-f$13 (multiplicity-formula 'one b-ex$12))
(define b-ex$412 (join b-ex$409 b-ex$411))
(define b-ex$111 (join b-ex$110 r$0))
(define b-ex$532 (join b-ex$529 b-ex$531))
(define b-ex$540 (join b-ex$537 b-ex$539))
(define b-ex$372 (join b-ex$369 b-ex$371))
(define b-ex$492 (join b-ex$489 b-ex$491))
(define b-ex$324 (join b-ex$321 b-ex$323))
(define b-ex$660 (join b-ex$657 b-ex$659))
(define b-ex$580 (join b-ex$577 b-ex$579))
(define b-ex$484 (join b-ex$481 b-ex$483))
(define b-ex$456 (join b-ex$453 b-ex$455))
(define b-ex$340 (join b-ex$337 b-ex$339))
(define b-ex$360 (join b-ex$357 b-ex$359))
(define b-ex$636 (join b-ex$633 b-ex$635))
(define b-ex$364 (join b-ex$361 b-ex$363))
(define b-ex$612 (join b-ex$609 b-ex$611))
(define b-ex$312 (join b-ex$309 b-ex$311))
(define b-ex$348 (join b-ex$345 b-ex$347))
(define b-ex$316 (join b-ex$313 b-ex$315))
(define b-ex$600 (join b-ex$597 b-ex$599))
(define b-ex$528 (join b-ex$525 b-ex$527))
(define b-ex$556 (join b-ex$553 b-ex$555))
(define b-ex$508 (join b-ex$505 b-ex$507))
(define b-ex$588 (join b-ex$585 b-ex$587))
(define b-ex$468 (join b-ex$465 b-ex$467))
(define b-ex$516 (join b-ex$513 b-ex$515))
(define b-ex$628 (join b-ex$625 b-ex$627))
(define b-ex$504 (join b-ex$501 b-ex$503))
(define b-ex$388 (join b-ex$385 b-ex$387))
(define b-ex$624 (join b-ex$621 b-ex$623))
(define q-f$5 (quantified-formula 'all (list decl$2) mul-f$4))
(define b-ex$460 (join b-ex$457 b-ex$459))
(define b-ex$423 (join b-ex$420 b-ex$422))
(define b-ex$471 (join b-ex$468 b-ex$470))
(define b-ex$605 (join b-ex$604 r$4))
(define b-ex$653 (join b-ex$652 r$4))
(define b-ex$629 (join b-ex$628 r$4))
(define b-ex$509 (join b-ex$508 r$4))
(define b-ex$461 (join b-ex$460 r$4))
(define b-ex$543 (join b-ex$540 b-ex$542))
(define b-ex$519 (join b-ex$516 b-ex$518))
(define b-ex$112 (join b-ex$111 r$0))
(define b-ex$495 (join b-ex$492 b-ex$494))
(define b-ex$351 (join b-ex$348 b-ex$350))
(define b-ex$413 (join b-ex$412 r$4))
(define b-ex$389 (join b-ex$388 r$4))
(define b-ex$327 (join b-ex$324 b-ex$326))
(define q-f$14 (quantified-formula 'all decls$10 mul-f$13))
(define b-ex$567 (join b-ex$564 b-ex$566))
(define b-ex$663 (join b-ex$660 b-ex$662))
(define b-f$6 (&& cmp-f$1 q-f$5))
(define b-ex$365 (join b-ex$364 r$4))
(define b-ex$447 (join b-ex$444 b-ex$446))
(define b-ex$485 (join b-ex$484 r$4))
(define b-ex$581 (join b-ex$580 r$4))
(define b-ex$615 (join b-ex$612 b-ex$614))
(define b-ex$639 (join b-ex$636 b-ex$638))
(define b-ex$399 (join b-ex$396 b-ex$398))
(define b-f$674 (|| b-f$671 !-f$673))
(define b-ex$437 (join b-ex$436 r$4))
(define b-ex$557 (join b-ex$556 r$4))
(define b-ex$375 (join b-ex$372 b-ex$374))
(define b-ex$317 (join b-ex$316 r$4))
(define b-ex$533 (join b-ex$532 r$4))
(define b-ex$591 (join b-ex$588 b-ex$590))
(define b-ex$341 (join b-ex$340 r$4))
(define b-ex$498 (join b-ex$495 b-ex$497))
(define b-ex$666 (join b-ex$663 b-ex$665))
(define b-ex$438 (join b-ex$432 b-ex$437))
(define b-ex$630 (join b-ex$624 b-ex$629))
(define b-ex$318 (join b-ex$312 b-ex$317))
(define b-ex$570 (join b-ex$567 b-ex$569))
(define b-ex$594 (join b-ex$591 b-ex$593))
(define b-ex$330 (join b-ex$327 b-ex$329))
(define b-ex$642 (join b-ex$639 b-ex$641))
(define b-ex$390 (join b-ex$384 b-ex$389))
(define b-ex$342 (join b-ex$336 b-ex$341))
(define b-ex$606 (join b-ex$600 b-ex$605))
(define b-ex$426 (join b-ex$423 b-ex$425))
(define b-ex$113 (join b-ex$112 r$0))
(define b-ex$546 (join b-ex$543 b-ex$545))
(define b-ex$522 (join b-ex$519 b-ex$521))
(define b-ex$654 (join b-ex$648 b-ex$653))
(define b-ex$618 (join b-ex$615 b-ex$617))
(define b-ex$366 (join b-ex$360 b-ex$365))
(define b-f$677 (|| b-f$674 !-f$676))
(define app$7 b-f$6)
(define b-ex$354 (join b-ex$351 b-ex$353))
(define b-ex$582 (join b-ex$576 b-ex$581))
(define b-ex$402 (join b-ex$399 b-ex$401))
(define b-ex$534 (join b-ex$528 b-ex$533))
(define b-ex$510 (join b-ex$504 b-ex$509))
(define b-ex$474 (join b-ex$471 b-ex$473))
(define b-ex$486 (join b-ex$480 b-ex$485))
(define b-ex$558 (join b-ex$552 b-ex$557))
(define b-ex$462 (join b-ex$456 b-ex$461))
(define b-ex$414 (join b-ex$408 b-ex$413))
(define b-ex$378 (join b-ex$375 b-ex$377))
(define b-ex$450 (join b-ex$447 b-ex$449))
(define cmp-f$379 (= v$24 b-ex$378))
(define cmp-f$451 (= v$27 b-ex$450))
(define cmp-f$391 (= v$9 b-ex$390))
(define cmp-f$463 (= v$12 b-ex$462))
(define cmp-f$583 (= v$17 b-ex$582))
(define cmp-f$487 (= v$13 b-ex$486))
(define cmp-f$655 (= v$20 b-ex$654))
(define cmp-f$619 (= v$34 b-ex$618))
(define cmp-f$427 (= v$26 b-ex$426))
(define cmp-f$331 (= v$22 b-ex$330))
(define cmp-f$415 (= v$10 b-ex$414))
(define cmp-f$403 (= v$25 b-ex$402))
(define cmp-f$547 (= v$31 b-ex$546))
(define cmp-f$367 (= v$8 b-ex$366))
(define cmp-f$667 (= v$36 b-ex$666))
(define cmp-f$475 (= v$28 b-ex$474))
(define cmp-f$319 (= v$6 b-ex$318))
(define cmp-f$535 (= v$15 b-ex$534))
(define cmp-f$643 (= v$35 b-ex$642))
(define cmp-f$523 (= v$30 b-ex$522))
(define cmp-f$499 (= v$29 b-ex$498))
(define cmp-f$571 (= v$32 b-ex$570))
(define b-f$680 (|| b-f$677 !-f$679))
(define cmp-f$595 (= v$33 b-ex$594))
(define cmp-f$631 (= v$19 b-ex$630))
(define cmp-f$559 (= v$16 b-ex$558))
(define b-ex$114 (join b-ex$113 r$0))
(define cmp-f$343 (= v$7 b-ex$342))
(define cmp-f$355 (= v$23 b-ex$354))
(define cmp-f$439 (= v$11 b-ex$438))
(define cmp-f$511 (= v$14 b-ex$510))
(define b-f$15 (&& app$7 q-f$14))
(define cmp-f$607 (= v$18 b-ex$606))
(define b-ex$115 (join b-ex$114 r$0))
(define b-ex$116 (join b-ex$115 r$0))
(define b-ex$117 (join b-ex$116 r$0))
(define b-ex$118 (join b-ex$117 r$0))
(define b-ex$119 (join b-ex$118 r$0))
(define b-ex$120 (join b-ex$119 r$0))
(define b-ex$121 (join b-ex$120 r$0))
(define b-ex$122 (join b-ex$121 r$0))
(define b-ex$123 (join b-ex$122 r$0))
(define b-ex$124 (join b-ex$123 r$0))
(define b-ex$125 (join b-ex$124 r$0))
(define b-ex$126 (join b-ex$125 r$0))
(define b-ex$127 (join b-ex$126 r$0))
(define b-ex$128 (join b-ex$127 r$0))
(define b-ex$282 (join v$33 b-ex$128))
(define b-ex$210 (join v$27 b-ex$128))
(define b-ex$297 (join b-ex$128 v$19))
(define b-ex$201 (join b-ex$128 v$11))
(define b-ex$192 (join v$10 b-ex$128))
(define b-ex$141 (join b-ex$128 v$6))
(define b-ex$198 (join v$26 b-ex$128))
(define b-ex$144 (join v$6 b-ex$128))
(define b-ex$150 (join v$22 b-ex$128))
(define b-ex$273 (join b-ex$128 v$17))
(define b-ex$228 (join v$13 b-ex$128))
(define b-ex$300 (join v$19 b-ex$128))
(define b-ex$234 (join v$29 b-ex$128))
(define b-ex$186 (join v$25 b-ex$128))
(define b-ex$174 (join v$24 b-ex$128))
(define b-ex$183 (join b-ex$128 v$25))
(define b-ex$138 (join v$21 b-ex$128))
(define b-ex$147 (join b-ex$128 v$22))
(define b-ex$132 (join v$5 b-ex$128))
(define b-ex$303 (join b-ex$128 v$35))
(define b-ex$213 (join b-ex$128 v$12))
(define b-ex$135 (join b-ex$128 v$21))
(define b-ex$246 (join v$30 b-ex$128))
(define b-ex$168 (join v$8 b-ex$128))
(define b-ex$267 (join b-ex$128 v$32))
(define b-ex$153 (join b-ex$128 v$7))
(define b-ex$252 (join v$15 b-ex$128))
(define b-ex$195 (join b-ex$128 v$26))
(define b-ex$177 (join b-ex$128 v$9))
(define b-ex$180 (join v$9 b-ex$128))
(define b-ex$279 (join b-ex$128 v$33))
(define b-ex$222 (join v$28 b-ex$128))
(define b-ex$255 (join b-ex$128 v$31))
(define b-ex$189 (join b-ex$128 v$10))
(define b-ex$264 (join v$16 b-ex$128))
(define b-ex$162 (join v$23 b-ex$128))
(define b-ex$291 (join b-ex$128 v$34))
(define b-ex$204 (join v$11 b-ex$128))
(define b-ex$270 (join v$32 b-ex$128))
(define b-ex$240 (join v$14 b-ex$128))
(define b-ex$159 (join b-ex$128 v$23))
(define b-ex$261 (join b-ex$128 v$16))
(define b-ex$165 (join b-ex$128 v$8))
(define b-ex$171 (join b-ex$128 v$24))
(define b-ex$216 (join v$12 b-ex$128))
(define b-ex$219 (join b-ex$128 v$28))
(define b-ex$129 (join b-ex$128 v$5))
(define b-ex$306 (join v$35 b-ex$128))
(define b-ex$225 (join b-ex$128 v$13))
(define b-ex$243 (join b-ex$128 v$30))
(define b-ex$237 (join b-ex$128 v$14))
(define b-ex$231 (join b-ex$128 v$29))
(define b-ex$276 (join v$17 b-ex$128))
(define b-ex$288 (join v$18 b-ex$128))
(define b-ex$249 (join b-ex$128 v$15))
(define b-ex$294 (join v$34 b-ex$128))
(define b-ex$207 (join b-ex$128 v$27))
(define b-ex$258 (join v$31 b-ex$128))
(define b-ex$285 (join b-ex$128 v$18))
(define b-ex$156 (join v$7 b-ex$128))
(define cmp-f$301 (= v$66 b-ex$300))
(define cmp-f$232 (= v$75 b-ex$231))
(define cmp-f$205 (= v$58 b-ex$204))
(define cmp-f$262 (= v$48 b-ex$261))
(define cmp-f$145 (= v$53 b-ex$144))
(define cmp-f$289 (= v$65 b-ex$288))
(define cmp-f$133 (= v$52 b-ex$132))
(define cmp-f$148 (= v$68 b-ex$147))
(define cmp-f$208 (= v$73 b-ex$207))
(define cmp-f$181 (= v$56 b-ex$180))
(define cmp-f$142 (= v$38 b-ex$141))
(define cmp-f$178 (= v$41 b-ex$177))
(define cmp-f$268 (= v$78 b-ex$267))
(define cmp-f$193 (= v$57 b-ex$192))
(define cmp-f$214 (= v$44 b-ex$213))
(define cmp-f$277 (= v$64 b-ex$276))
(define cmp-f$211 (= v$88 b-ex$210))
(define cmp-f$220 (= v$74 b-ex$219))
(define cmp-f$274 (= v$49 b-ex$273))
(define cmp-f$139 (= v$82 b-ex$138))
(define cmp-f$136 (= v$67 b-ex$135))
(define cmp-f$190 (= v$42 b-ex$189))
(define cmp-f$154 (= v$39 b-ex$153))
(define cmp-f$196 (= v$72 b-ex$195))
(define cmp-f$151 (= v$83 b-ex$150))
(define cmp-f$292 (= v$80 b-ex$291))
(define cmp-f$280 (= v$79 b-ex$279))
(define cmp-f$283 (= v$94 b-ex$282))
(define cmp-f$199 (= v$87 b-ex$198))
(define cmp-f$241 (= v$61 b-ex$240))
(define cmp-f$259 (= v$92 b-ex$258))
(define cmp-f$250 (= v$47 b-ex$249))
(define cmp-f$235 (= v$90 b-ex$234))
(define cmp-f$271 (= v$93 b-ex$270))
(define cmp-f$172 (= v$70 b-ex$171))
(define cmp-f$187 (= v$86 b-ex$186))
(define cmp-f$166 (= v$40 b-ex$165))
(define cmp-f$256 (= v$77 b-ex$255))
(define cmp-f$130 (= v$37 b-ex$129))
(define cmp-f$238 (= v$46 b-ex$237))
(define cmp-f$217 (= v$59 b-ex$216))
(define cmp-f$169 (= v$55 b-ex$168))
(define cmp-f$304 (= v$81 b-ex$303))
(define cmp-f$202 (= v$43 b-ex$201))
(define cmp-f$295 (= v$95 b-ex$294))
(define cmp-f$265 (= v$63 b-ex$264))
(define cmp-f$157 (= v$54 b-ex$156))
(define cmp-f$184 (= v$71 b-ex$183))
(define cmp-f$160 (= v$69 b-ex$159))
(define cmp-f$286 (= v$50 b-ex$285))
(define cmp-f$175 (= v$85 b-ex$174))
(define cmp-f$247 (= v$91 b-ex$246))
(define cmp-f$244 (= v$76 b-ex$243))
(define cmp-f$253 (= v$62 b-ex$252))
(define cmp-f$307 (= v$96 b-ex$306))
(define cmp-f$223 (= v$89 b-ex$222))
(define cmp-f$229 (= v$60 b-ex$228))
(define cmp-f$163 (= v$84 b-ex$162))
(define cmp-f$226 (= v$45 b-ex$225))
(define cmp-f$298 (= v$51 b-ex$297))
(define b-f$131 (&& true cmp-f$130))
(define b-f$134 (&& b-f$131 cmp-f$133))
(define b-f$137 (&& b-f$134 cmp-f$136))
(define b-f$140 (&& b-f$137 cmp-f$139))
(define b-f$143 (&& b-f$140 cmp-f$142))
(define b-f$146 (&& b-f$143 cmp-f$145))
(define b-f$149 (&& b-f$146 cmp-f$148))
(define b-f$152 (&& b-f$149 cmp-f$151))
(define b-f$155 (&& b-f$152 cmp-f$154))
(define b-f$158 (&& b-f$155 cmp-f$157))
(define b-f$161 (&& b-f$158 cmp-f$160))
(define b-f$164 (&& b-f$161 cmp-f$163))
(define b-f$167 (&& b-f$164 cmp-f$166))
(define b-f$170 (&& b-f$167 cmp-f$169))
(define b-f$173 (&& b-f$170 cmp-f$172))
(define b-f$176 (&& b-f$173 cmp-f$175))
(define b-f$179 (&& b-f$176 cmp-f$178))
(define b-f$182 (&& b-f$179 cmp-f$181))
(define b-f$185 (&& b-f$182 cmp-f$184))
(define b-f$188 (&& b-f$185 cmp-f$187))
(define b-f$191 (&& b-f$188 cmp-f$190))
(define b-f$194 (&& b-f$191 cmp-f$193))
(define b-f$197 (&& b-f$194 cmp-f$196))
(define b-f$200 (&& b-f$197 cmp-f$199))
(define b-f$203 (&& b-f$200 cmp-f$202))
(define b-f$206 (&& b-f$203 cmp-f$205))
(define b-f$209 (&& b-f$206 cmp-f$208))
(define b-f$212 (&& b-f$209 cmp-f$211))
(define b-f$215 (&& b-f$212 cmp-f$214))
(define b-f$218 (&& b-f$215 cmp-f$217))
(define b-f$221 (&& b-f$218 cmp-f$220))
(define b-f$224 (&& b-f$221 cmp-f$223))
(define b-f$227 (&& b-f$224 cmp-f$226))
(define b-f$230 (&& b-f$227 cmp-f$229))
(define b-f$233 (&& b-f$230 cmp-f$232))
(define b-f$236 (&& b-f$233 cmp-f$235))
(define b-f$239 (&& b-f$236 cmp-f$238))
(define b-f$242 (&& b-f$239 cmp-f$241))
(define b-f$245 (&& b-f$242 cmp-f$244))
(define b-f$248 (&& b-f$245 cmp-f$247))
(define b-f$251 (&& b-f$248 cmp-f$250))
(define b-f$254 (&& b-f$251 cmp-f$253))
(define b-f$257 (&& b-f$254 cmp-f$256))
(define b-f$260 (&& b-f$257 cmp-f$259))
(define b-f$263 (&& b-f$260 cmp-f$262))
(define b-f$266 (&& b-f$263 cmp-f$265))
(define b-f$269 (&& b-f$266 cmp-f$268))
(define b-f$272 (&& b-f$269 cmp-f$271))
(define b-f$275 (&& b-f$272 cmp-f$274))
(define b-f$278 (&& b-f$275 cmp-f$277))
(define b-f$281 (&& b-f$278 cmp-f$280))
(define b-f$284 (&& b-f$281 cmp-f$283))
(define b-f$287 (&& b-f$284 cmp-f$286))
(define b-f$290 (&& b-f$287 cmp-f$289))
(define b-f$293 (&& b-f$290 cmp-f$292))
(define b-f$296 (&& b-f$293 cmp-f$295))
(define b-f$299 (&& b-f$296 cmp-f$298))
(define b-f$302 (&& b-f$299 cmp-f$301))
(define b-f$305 (&& b-f$302 cmp-f$304))
(define b-f$308 (&& b-f$305 cmp-f$307))
(define b-f$320 (&& b-f$308 cmp-f$319))
(define b-f$332 (&& b-f$320 cmp-f$331))
(define b-f$344 (&& b-f$332 cmp-f$343))
(define b-f$356 (&& b-f$344 cmp-f$355))
(define b-f$368 (&& b-f$356 cmp-f$367))
(define b-f$380 (&& b-f$368 cmp-f$379))
(define b-f$392 (&& b-f$380 cmp-f$391))
(define b-f$404 (&& b-f$392 cmp-f$403))
(define b-f$416 (&& b-f$404 cmp-f$415))
(define b-f$428 (&& b-f$416 cmp-f$427))
(define b-f$440 (&& b-f$428 cmp-f$439))
(define b-f$452 (&& b-f$440 cmp-f$451))
(define b-f$464 (&& b-f$452 cmp-f$463))
(define b-f$476 (&& b-f$464 cmp-f$475))
(define b-f$488 (&& b-f$476 cmp-f$487))
(define b-f$500 (&& b-f$488 cmp-f$499))
(define b-f$512 (&& b-f$500 cmp-f$511))
(define b-f$524 (&& b-f$512 cmp-f$523))
(define b-f$536 (&& b-f$524 cmp-f$535))
(define b-f$548 (&& b-f$536 cmp-f$547))
(define b-f$560 (&& b-f$548 cmp-f$559))
(define b-f$572 (&& b-f$560 cmp-f$571))
(define b-f$584 (&& b-f$572 cmp-f$583))
(define b-f$596 (&& b-f$584 cmp-f$595))
(define b-f$608 (&& b-f$596 cmp-f$607))
(define b-f$620 (&& b-f$608 cmp-f$619))
(define b-f$632 (&& b-f$620 cmp-f$631))
(define b-f$644 (&& b-f$632 cmp-f$643))
(define b-f$656 (&& b-f$644 cmp-f$655))
(define b-f$668 (&& b-f$656 cmp-f$667))
(define b-f$681 (&& b-f$668 b-f$680))
(define q-f$682 (quantified-formula 'some decls$108 b-f$681))
(define b-f$683 (&& b-f$15 q-f$682))
(define ts$1 (list (list "n0" "n1") (list "n1" "n2") (list "n2" "n3") (list "n3" "n4") (list "n4" "n5") (list "n5" "n6") (list "n6" "n7") (list "n7" "n8") (list "n8" "n9") (list "n9" "n10") (list "n10" "n11") (list "n11" "n12") (list "n12" "n13") (list "n13" "n14") (list "n14" "n15") (list "n15" "n16") (list "n16" "n17") (list "n17" "n18") (list "n18" "n19") (list "n19" "n20") (list "n20" "n0")))
(define ts$3 (list (list "n0" "n0" "n0") (list "n0" "n1" "n1") (list "n0" "n2" "n2") (list "n0" "n3" "n3") (list "n0" "n4" "n4") (list "n0" "n5" "n5") (list "n0" "n6" "n6") (list "n0" "n7" "n7") (list "n0" "n8" "n8") (list "n0" "n9" "n9") (list "n0" "n10" "n10") (list "n0" "n11" "n11") (list "n0" "n12" "n12") (list "n0" "n13" "n13") (list "n0" "n14" "n14") (list "n0" "n15" "n15") (list "n0" "n16" "n16") (list "n0" "n17" "n17") (list "n0" "n18" "n18") (list "n0" "n19" "n19") (list "n0" "n20" "n20") (list "n1" "n0" "n1") (list "n1" "n1" "n2") (list "n1" "n2" "n3") (list "n1" "n3" "n4") (list "n1" "n4" "n5") (list "n1" "n5" "n6") (list "n1" "n6" "n7") (list "n1" "n7" "n8") (list "n1" "n8" "n9") (list "n1" "n9" "n10") (list "n1" "n10" "n11") (list "n1" "n11" "n12") (list "n1" "n12" "n13") (list "n1" "n13" "n14") (list "n1" "n14" "n15") (list "n1" "n15" "n16") (list "n1" "n16" "n17") (list "n1" "n17" "n18") (list "n1" "n18" "n19") (list "n1" "n19" "n20") (list "n1" "n20" "n0") (list "n2" "n0" "n2") (list "n2" "n1" "n3") (list "n2" "n2" "n4") (list "n2" "n3" "n5") (list "n2" "n4" "n6") (list "n2" "n5" "n7") (list "n2" "n6" "n8") (list "n2" "n7" "n9") (list "n2" "n8" "n10") (list "n2" "n9" "n11") (list "n2" "n10" "n12") (list "n2" "n11" "n13") (list "n2" "n12" "n14") (list "n2" "n13" "n15") (list "n2" "n14" "n16") (list "n2" "n15" "n17") (list "n2" "n16" "n18") (list "n2" "n17" "n19") (list "n2" "n18" "n20") (list "n2" "n19" "n0") (list "n2" "n20" "n1") (list "n3" "n0" "n3") (list "n3" "n1" "n4") (list "n3" "n2" "n5") (list "n3" "n3" "n6") (list "n3" "n4" "n7") (list "n3" "n5" "n8") (list "n3" "n6" "n9") (list "n3" "n7" "n10") (list "n3" "n8" "n11") (list "n3" "n9" "n12") (list "n3" "n10" "n13") (list "n3" "n11" "n14") (list "n3" "n12" "n15") (list "n3" "n13" "n16") (list "n3" "n14" "n17") (list "n3" "n15" "n18") (list "n3" "n16" "n19") (list "n3" "n17" "n20") (list "n3" "n18" "n0") (list "n3" "n19" "n1") (list "n3" "n20" "n2") (list "n4" "n0" "n4") (list "n4" "n1" "n5") (list "n4" "n2" "n6") (list "n4" "n3" "n7") (list "n4" "n4" "n8") (list "n4" "n5" "n9") (list "n4" "n6" "n10") (list "n4" "n7" "n11") (list "n4" "n8" "n12") (list "n4" "n9" "n13") (list "n4" "n10" "n14") (list "n4" "n11" "n15") (list "n4" "n12" "n16") (list "n4" "n13" "n17") (list "n4" "n14" "n18") (list "n4" "n15" "n19") (list "n4" "n16" "n20") (list "n4" "n17" "n0") (list "n4" "n18" "n1") (list "n4" "n19" "n2") (list "n4" "n20" "n3") (list "n5" "n0" "n5") (list "n5" "n1" "n6") (list "n5" "n2" "n7") (list "n5" "n3" "n8") (list "n5" "n4" "n9") (list "n5" "n5" "n10") (list "n5" "n6" "n11") (list "n5" "n7" "n12") (list "n5" "n8" "n13") (list "n5" "n9" "n14") (list "n5" "n10" "n15") (list "n5" "n11" "n16") (list "n5" "n12" "n17") (list "n5" "n13" "n18") (list "n5" "n14" "n19") (list "n5" "n15" "n20") (list "n5" "n16" "n0") (list "n5" "n17" "n1") (list "n5" "n18" "n2") (list "n5" "n19" "n3") (list "n5" "n20" "n4") (list "n6" "n0" "n6") (list "n6" "n1" "n7") (list "n6" "n2" "n8") (list "n6" "n3" "n9") (list "n6" "n4" "n10") (list "n6" "n5" "n11") (list "n6" "n6" "n12") (list "n6" "n7" "n13") (list "n6" "n8" "n14") (list "n6" "n9" "n15") (list "n6" "n10" "n16") (list "n6" "n11" "n17") (list "n6" "n12" "n18") (list "n6" "n13" "n19") (list "n6" "n14" "n20") (list "n6" "n15" "n0") (list "n6" "n16" "n1") (list "n6" "n17" "n2") (list "n6" "n18" "n3") (list "n6" "n19" "n4") (list "n6" "n20" "n5") (list "n7" "n0" "n7") (list "n7" "n1" "n8") (list "n7" "n2" "n9") (list "n7" "n3" "n10") (list "n7" "n4" "n11") (list "n7" "n5" "n12") (list "n7" "n6" "n13") (list "n7" "n7" "n14") (list "n7" "n8" "n15") (list "n7" "n9" "n16") (list "n7" "n10" "n17") (list "n7" "n11" "n18") (list "n7" "n12" "n19") (list "n7" "n13" "n20") (list "n7" "n14" "n0") (list "n7" "n15" "n1") (list "n7" "n16" "n2") (list "n7" "n17" "n3") (list "n7" "n18" "n4") (list "n7" "n19" "n5") (list "n7" "n20" "n6") (list "n8" "n0" "n8") (list "n8" "n1" "n9") (list "n8" "n2" "n10") (list "n8" "n3" "n11") (list "n8" "n4" "n12") (list "n8" "n5" "n13") (list "n8" "n6" "n14") (list "n8" "n7" "n15") (list "n8" "n8" "n16") (list "n8" "n9" "n17") (list "n8" "n10" "n18") (list "n8" "n11" "n19") (list "n8" "n12" "n20") (list "n8" "n13" "n0") (list "n8" "n14" "n1") (list "n8" "n15" "n2") (list "n8" "n16" "n3") (list "n8" "n17" "n4") (list "n8" "n18" "n5") (list "n8" "n19" "n6") (list "n8" "n20" "n7") (list "n9" "n0" "n9") (list "n9" "n1" "n10") (list "n9" "n2" "n11") (list "n9" "n3" "n12") (list "n9" "n4" "n13") (list "n9" "n5" "n14") (list "n9" "n6" "n15") (list "n9" "n7" "n16") (list "n9" "n8" "n17") (list "n9" "n9" "n18") (list "n9" "n10" "n19") (list "n9" "n11" "n20") (list "n9" "n12" "n0") (list "n9" "n13" "n1") (list "n9" "n14" "n2") (list "n9" "n15" "n3") (list "n9" "n16" "n4") (list "n9" "n17" "n5") (list "n9" "n18" "n6") (list "n9" "n19" "n7") (list "n9" "n20" "n8") (list "n10" "n0" "n10") (list "n10" "n1" "n11") (list "n10" "n2" "n12") (list "n10" "n3" "n13") (list "n10" "n4" "n14") (list "n10" "n5" "n15") (list "n10" "n6" "n16") (list "n10" "n7" "n17") (list "n10" "n8" "n18") (list "n10" "n9" "n19") (list "n10" "n10" "n20") (list "n10" "n11" "n0") (list "n10" "n12" "n1") (list "n10" "n13" "n2") (list "n10" "n14" "n3") (list "n10" "n15" "n4") (list "n10" "n16" "n5") (list "n10" "n17" "n6") (list "n10" "n18" "n7") (list "n10" "n19" "n8") (list "n10" "n20" "n9") (list "n11" "n0" "n11") (list "n11" "n1" "n12") (list "n11" "n2" "n13") (list "n11" "n3" "n14") (list "n11" "n4" "n15") (list "n11" "n5" "n16") (list "n11" "n6" "n17") (list "n11" "n7" "n18") (list "n11" "n8" "n19") (list "n11" "n9" "n20") (list "n11" "n10" "n0") (list "n11" "n11" "n1") (list "n11" "n12" "n2") (list "n11" "n13" "n3") (list "n11" "n14" "n4") (list "n11" "n15" "n5") (list "n11" "n16" "n6") (list "n11" "n17" "n7") (list "n11" "n18" "n8") (list "n11" "n19" "n9") (list "n11" "n20" "n10") (list "n12" "n0" "n12") (list "n12" "n1" "n13") (list "n12" "n2" "n14") (list "n12" "n3" "n15") (list "n12" "n4" "n16") (list "n12" "n5" "n17") (list "n12" "n6" "n18") (list "n12" "n7" "n19") (list "n12" "n8" "n20") (list "n12" "n9" "n0") (list "n12" "n10" "n1") (list "n12" "n11" "n2") (list "n12" "n12" "n3") (list "n12" "n13" "n4") (list "n12" "n14" "n5") (list "n12" "n15" "n6") (list "n12" "n16" "n7") (list "n12" "n17" "n8") (list "n12" "n18" "n9") (list "n12" "n19" "n10") (list "n12" "n20" "n11") (list "n13" "n0" "n13") (list "n13" "n1" "n14") (list "n13" "n2" "n15") (list "n13" "n3" "n16") (list "n13" "n4" "n17") (list "n13" "n5" "n18") (list "n13" "n6" "n19") (list "n13" "n7" "n20") (list "n13" "n8" "n0") (list "n13" "n9" "n1") (list "n13" "n10" "n2") (list "n13" "n11" "n3") (list "n13" "n12" "n4") (list "n13" "n13" "n5") (list "n13" "n14" "n6") (list "n13" "n15" "n7") (list "n13" "n16" "n8") (list "n13" "n17" "n9") (list "n13" "n18" "n10") (list "n13" "n19" "n11") (list "n13" "n20" "n12") (list "n14" "n0" "n14") (list "n14" "n1" "n15") (list "n14" "n2" "n16") (list "n14" "n3" "n17") (list "n14" "n4" "n18") (list "n14" "n5" "n19") (list "n14" "n6" "n20") (list "n14" "n7" "n0") (list "n14" "n8" "n1") (list "n14" "n9" "n2") (list "n14" "n10" "n3") (list "n14" "n11" "n4") (list "n14" "n12" "n5") (list "n14" "n13" "n6") (list "n14" "n14" "n7") (list "n14" "n15" "n8") (list "n14" "n16" "n9") (list "n14" "n17" "n10") (list "n14" "n18" "n11") (list "n14" "n19" "n12") (list "n14" "n20" "n13") (list "n15" "n0" "n15") (list "n15" "n1" "n16") (list "n15" "n2" "n17") (list "n15" "n3" "n18") (list "n15" "n4" "n19") (list "n15" "n5" "n20") (list "n15" "n6" "n0") (list "n15" "n7" "n1") (list "n15" "n8" "n2") (list "n15" "n9" "n3") (list "n15" "n10" "n4") (list "n15" "n11" "n5") (list "n15" "n12" "n6") (list "n15" "n13" "n7") (list "n15" "n14" "n8") (list "n15" "n15" "n9") (list "n15" "n16" "n10") (list "n15" "n17" "n11") (list "n15" "n18" "n12") (list "n15" "n19" "n13") (list "n15" "n20" "n14") (list "n16" "n0" "n16") (list "n16" "n1" "n17") (list "n16" "n2" "n18") (list "n16" "n3" "n19") (list "n16" "n4" "n20") (list "n16" "n5" "n0") (list "n16" "n6" "n1") (list "n16" "n7" "n2") (list "n16" "n8" "n3") (list "n16" "n9" "n4") (list "n16" "n10" "n5") (list "n16" "n11" "n6") (list "n16" "n12" "n7") (list "n16" "n13" "n8") (list "n16" "n14" "n9") (list "n16" "n15" "n10") (list "n16" "n16" "n11") (list "n16" "n17" "n12") (list "n16" "n18" "n13") (list "n16" "n19" "n14") (list "n16" "n20" "n15") (list "n17" "n0" "n17") (list "n17" "n1" "n18") (list "n17" "n2" "n19") (list "n17" "n3" "n20") (list "n17" "n4" "n0") (list "n17" "n5" "n1") (list "n17" "n6" "n2") (list "n17" "n7" "n3") (list "n17" "n8" "n4") (list "n17" "n9" "n5") (list "n17" "n10" "n6") (list "n17" "n11" "n7") (list "n17" "n12" "n8") (list "n17" "n13" "n9") (list "n17" "n14" "n10") (list "n17" "n15" "n11") (list "n17" "n16" "n12") (list "n17" "n17" "n13") (list "n17" "n18" "n14") (list "n17" "n19" "n15") (list "n17" "n20" "n16") (list "n18" "n0" "n18") (list "n18" "n1" "n19") (list "n18" "n2" "n20") (list "n18" "n3" "n0") (list "n18" "n4" "n1") (list "n18" "n5" "n2") (list "n18" "n6" "n3") (list "n18" "n7" "n4") (list "n18" "n8" "n5") (list "n18" "n9" "n6") (list "n18" "n10" "n7") (list "n18" "n11" "n8") (list "n18" "n12" "n9") (list "n18" "n13" "n10") (list "n18" "n14" "n11") (list "n18" "n15" "n12") (list "n18" "n16" "n13") (list "n18" "n17" "n14") (list "n18" "n18" "n15") (list "n18" "n19" "n16") (list "n18" "n20" "n17") (list "n19" "n0" "n19") (list "n19" "n1" "n20") (list "n19" "n2" "n0") (list "n19" "n3" "n1") (list "n19" "n4" "n2") (list "n19" "n5" "n3") (list "n19" "n6" "n4") (list "n19" "n7" "n5") (list "n19" "n8" "n6") (list "n19" "n9" "n7") (list "n19" "n10" "n8") (list "n19" "n11" "n9") (list "n19" "n12" "n10") (list "n19" "n13" "n11") (list "n19" "n14" "n12") (list "n19" "n15" "n13") (list "n19" "n16" "n14") (list "n19" "n17" "n15") (list "n19" "n18" "n16") (list "n19" "n19" "n17") (list "n19" "n20" "n18") (list "n20" "n0" "n20") (list "n20" "n1" "n0") (list "n20" "n2" "n1") (list "n20" "n3" "n2") (list "n20" "n4" "n3") (list "n20" "n5" "n4") (list "n20" "n6" "n5") (list "n20" "n7" "n6") (list "n20" "n8" "n7") (list "n20" "n9" "n8") (list "n20" "n10" "n9") (list "n20" "n11" "n10") (list "n20" "n12" "n11") (list "n20" "n13" "n12") (list "n20" "n14" "n13") (list "n20" "n15" "n14") (list "n20" "n16" "n15") (list "n20" "n17" "n16") (list "n20" "n18" "n17") (list "n20" "n19" "n18") (list "n20" "n20" "n19")))
(define bd$4 (bound r$4 ts$3 ts$3))
(define bd$2 (bound r$0 ts$1 ts$1))
(define bounds$5 (bounds universe$0 (list bd$4 bd$2)))
(displayln "-- skolemizing...")
(match-define (cons F bnds) (time (skolemize-merge bounds$5 b-f$683 3)))
(displayln "-- instantiating bounds...")
(define interp (time (instantiate-bounds bnds)))
(displayln "-- breaking symmetry...")
(define sbp (time (generate-sbp interp bnds)))
(displayln "-- making boolean interpretation...")
(define F* (time (interpret* F interp)))
(displayln "-- making Rosette solver call...")
(define sol (time (solve (assert (&& F* sbp)))))
